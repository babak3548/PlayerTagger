// AVITrimmerCOM.idl : IDL source for AVITrimmerCOM.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (AVITrimmerCOM.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "moduleconfig.idl";		
import "moduleconfigforvb.idl";	
	
	//
	//
	[
		object,
		uuid(33968711-8887-46D4-A71B-9B1B061EEDCA),
		dual,
		helpstring("ITrimmerObjControlCB Interface"),
		pointer_default(unique)
	]
	interface ITrimmerObjControlCB : IUnknown
	{
		[id(1), helpstring("method OnStart")]	HRESULT OnStart(void);
		[id(2), helpstring("method OnStop")]	HRESULT OnStop(void);
		[id(3), helpstring("method OnPause")]	HRESULT OnPause(void);
		[id(4), helpstring("method OnError")]	HRESULT OnError(long hr, BSTR Val);
	};
	//
	//
	[
		object,
		uuid(9D9BF96C-8E7A-41FC-ABB1-CCC9CEF493E9),
		dual,
		helpstring("ITrimmerObjControl Interface"),
		pointer_default(unique)
	]
	interface ITrimmerObjControl : IDispatch
	{
		[propget, id(1), helpstring("property InputFN")]		HRESULT InputFN([out, retval] BSTR *pVal);
		[propput, id(1), helpstring("property InputFN")]		HRESULT InputFN([in] BSTR newVal);
		[propget, id(2), helpstring("property OutputFN")]		HRESULT OutputFN([out, retval] BSTR *pVal);
		[propput, id(2), helpstring("property OutputFN")]		HRESULT OutputFN([in] BSTR newVal);
		[id(3), helpstring("method Start")]						HRESULT Start(void);
		[id(4), helpstring("method Stop")]						HRESULT Stop(void);
		[propget, id(5), helpstring("property Status")]			HRESULT Status([out, retval] long *pVal);
		[propget, id(6), helpstring("property StreamLength")]	HRESULT StreamLength([out, retval] double *pVal);
		[propget, id(7), helpstring("property StartPosition")]	HRESULT StartPosition([out, retval] double *pVal);
		[propput, id(7), helpstring("property StartPosition")]	HRESULT StartPosition([in] double newVal);
		[propget, id(8), helpstring("property StopPosition")]	HRESULT StopPosition([out, retval] double *pVal);
		[propput, id(8), helpstring("property StopPosition")]	HRESULT StopPosition([in] double newVal);
		[id(9), helpstring("method SetCallback")]				HRESULT SetCallback(ITrimmerObjControlCB *pITrimmerObjControlCB);
	};


	/*[
		object,
		uuid(34FCD759-A1D9-4593-9390-6275BC639B42),
		dual,
		helpstring("IXTransform Interface"),
		pointer_default(unique)
	]
	interface IXTransform : IDispatch{
	[id(1), helpstring("method put_Parameters")]			HRESULT put_Parameters([in] BYTE *pData, [in] LONG lBytes);
	[id(2), helpstring("method get_Parameters")]			HRESULT get_Parameters([out] BYTE *pData, [out] LONG *plBytes);
	[id(3), helpstring("method get_Progress")]				HRESULT get_Progress([out] SHORT *pValue, [out] BSTR *psState);
	[id(4), helpstring("method get_LastErrorMessage")]		HRESULT get_LastErrorMessage([out] BSTR *psError);
	[id(5), helpstring("method Start")]						HRESULT Start(void);
	[id(6), helpstring("method Stop")]						HRESULT Stop(void);
	[id(7), helpstring("method ShowGraph")]					HRESULT ShowGraph(void);*/
//};


[
	uuid(958BB6C7-14FB-49EF-AFAE-678155680C6A),
	version(1.0),
	helpstring("AVITrimmerCOM 1.0 Type Library")
]
library AVITRIMMERCOMLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(DC2117FE-3CCE-476A-992A-CAF7DED33764),
		helpstring("_IMLTransformEvents Interface")
	]
	dispinterface _IXTransformEvents 
	{
		properties:
		methods:
		[id(1), helpstring("method OnStart")]		HRESULT	OnStart(void);
		[id(2), helpstring("method OnStop")]		HRESULT	OnStop(void);
		[id(3), helpstring("method OnComplete")]	HRESULT	OnComplete(void);
		[id(4), helpstring("method OnError")]		HRESULT	OnError(HRESULT hrError, BSTR sError);
	};
	
	[
		uuid(B61C3708-CAA8-48CA-9D9C-682D0A5A3852),
		helpstring("SolveigMM AVI TrimmerObjControl Class")
	]
	coclass TrimmerObjControl
	{
		[default] interface ITrimmerObjControl;
//		interface IXTransform;
		[default, source] dispinterface _IXTransformEvents;
		interface IModuleConfig;
		interface IModuleConfigForVB;
	};
};
